diff --git a/recurly/src/Form/RecurlySettingsForm.php b/recurly/src/Form/RecurlySettingsForm.php
index d1207cee..cf9db2c1 100644
--- a/recurly/src/Form/RecurlySettingsForm.php
+++ b/recurly/src/Form/RecurlySettingsForm.php
@@ -62,6 +62,12 @@ public function buildForm(array $form, FormStateInterface $form_state) {
       '#description' => $this->t("The subdomain of your account."),
       '#default_value' => $recurly_subdomain,
     ];
+    $form['account']['recurly_plan_prefix'] = [
+      '#type' => 'textfield',
+      '#title' => $this->t('Plan Prefix'),
+      '#description' => $this->t("Prefix of plans."),
+      '#default_value' => $this->config('recurly.settings')->get('recurly_plan_prefix'),
+    ];
     // If subdomain isn't empty, then set currency suggestion and link,
     // otherwise leave blank.
     $currency_suggestion = !empty($recurly_subdomain) ? $this->t('@spaceYou can find a list of supported currencies in your <a href=":url">Recurly account currencies page</a>.', [
@@ -389,6 +395,7 @@ public function submitForm(array &$form, FormStateInterface $form_state) {
       ->set('recurly_private_api_key', $form_state->getValue('recurly_private_api_key'))
       ->set('recurly_public_key', $form_state->getValue('recurly_public_key'))
       ->set('recurly_subdomain', $form_state->getValue('recurly_subdomain'))
+      ->set('recurly_plan_prefix', $form_state->getValue('recurly_plan_prefix'))
       ->set('recurly_default_currency', $form_state->getValue('recurly_default_currency'))
       ->set('recurly_listener_key', $form_state->getValue('recurly_listener_key'))
       ->set('recurly_push_logging', $form_state->getValue('recurly_push_logging'))
diff --git a/recurly/src/Form/RecurlySubscriptionPlansForm.php b/recurly/src/Form/RecurlySubscriptionPlansForm.php
index abb74434..70acb8d0 100644
--- a/recurly/src/Form/RecurlySubscriptionPlansForm.php
+++ b/recurly/src/Form/RecurlySubscriptionPlansForm.php
@@ -67,6 +67,12 @@ public function buildForm(array $form, FormStateInterface $form_state) {
     // Add plans from Recurly API and update existing ones.
     $plans_array = [];
     foreach ($plans as $plan) {
+      // Ignore plans that are not for HOA Lifestyles.
+      $plan_prefix = $this->config('recurly.settings')->get('recurly_plan_prefix');
+      if ((! empty($plan_prefix)) && strpos($plan->plan_code, $plan_prefix) !== 0) {
+        continue;
+      }
+
       // Use an array to update/create plans, and to determine existing plans.
       $plans_array[$plan->plan_code] = [
         'plan' => $plan,
